#!/usr/bin/perl
#	@(#) logproc - Process log files
#	Copyright (C) 2004, Nick Andrew <nick@nick-andrew.net>
#	Released under the terms of the GNU General Public License
#
# Usage: find path -type f -print | logproc ctlfile
#
# $Source$
# $Revision$
# $Date$

use strict;

sub usage {
	die "Usage: logproc [-d] ctlfile";
}

if ($#ARGV < 0) {
	usage();
}

my $real = 1;

if ($ARGV[0] eq "-d") {
	$real = 0;
	shift @ARGV;
}

my %paths;

select(STDOUT); $| = 1;
my $ctlfile = $ARGV[0];

my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
$mon++;
$year += 1900;
my $yyyymm = sprintf "%04d-%02d", $year, $mon;
my $yyyymmdd = sprintf "%04d-%02d-%02d", $year, $mon, $mday;

open(C, "<$ctlfile") || die "ctlfile: $ctlfile: $!";
my $n = 0;

while (<C>) {
	next if (/^$/);
	next if (/^#/);
	chop;
	my ($path,$crit,$disp,@rest) = split(/\|/);
	$paths{$path} = { disp=>$disp };

	# Parse criteria
	my ($count,$type) = ($crit =~ /(\d+)(.)/);
	if ($type eq 'y') {
		$paths{$path}->{target} = sprintf "%04d", $year - $count;
	}

	if ($type eq 'm') {
		my $y = $year;
		my $m = $mon - $count;
		while ($m < 1) {
			$y--;
			$m += 12;
		}
		$paths{$path}->{target} = sprintf "%04d-%02d", $y, $m;
	}

	if ($type eq 'd') {
		my $then = time - 86400 * $count;
		my($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime($then);
		$paths{$path}->{mtime} = $then;
	}


	if ($disp eq "discard") {
		next;
	}
	if ($disp eq "exec") {
		$paths{$path}->{cmd} = $rest[0];
		next;
	}

	print STDERR "Unknown disposition: $path|$crit|$disp\n";
}

close(C);
my $paths = $n;

while (<STDIN>) {
	chop;
	my $fn = $_;
#	print "Checking $fn\n";
	foreach my $path (keys %paths) {
#		print "Trying: $path\n";
		if (/^$path/) {
			my $pathre = $path;
			my $disp = $paths{$path}->{disp};
#			print "Match: $_ (disp is $disp)\n";

			if ($disp eq "ignore") {
				last;
			}

			my @s = stat($_);
			if (!@s) {
				print STDERR "Unable to stat $_: $!\n";
				last;
			}

			my $mtime = $s[9];

			if (exists $paths{$pathre}->{mtime}) {
#				print "Checking mtime: $mtime\n";
				if ($mtime >= $paths{$pathre}->{mtime}) {
					last;
				}
			}

			if (exists $paths{$path}->{target}) {
				my ($ssec,$smin,$shour,$smday,$smon,$syear,@srest) = localtime($s[9]);	# mstr
				$smon++;
				$syear += 1900;
				my $mstr = sprintf "%04d-%02d-%02d %02d:%02d:%02d", $syear, $smon, $smday, $shour, $smin, $ssec;
#				print "Checking mstr: $mstr\n";
				if ($mstr ge $paths{$pathre}->{target}) {
					last;
				}
			}

			# All tests passed

			if ($paths{$path}->{disp} eq "discard") {
				print "Unlink $_\n";
				if ($real) {
					unlink($_);
				}
				last;
			}

			if ($paths{$path}->{disp} eq "exec") {
				my $run = sprintf $paths{$path}->{cmd}, $_;
				print "Execute $run\n";
				if ($real) {
					system($run);
				}
				last;
			}

			# Otherwise, ignore unknown disposition
			last;
		}
	}
}
